<style>
  .custom-slider-wrapper {
    position: relative;
    overflow: hidden;
  }

  .customSwiper .swiper-slide {
    height: 85vh;
    background-size: cover;
    background-position: center;
    display: flex;
    align-items: end;
  }
  .hero-section-slider .swiper-pagination {
    display: flex;
    justify-content: flex-start;
    bottom: 52px !important;
  }
  .hero-section-slider .swiper-pagination-bullet {
    width: 150px;
    height: 6px;
    border-radius: 100px;
    position: relative;
    overflow: hidden;
    background: #ffffff4d !important;
    margin: 0px 10px 0px 0px !important;
    opacity: 1;
  }

  .hero-section-slider .swiper-pagination-bullet::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  .hero-section-slider .swiper-pagination-bullet-active {
    background: #ffffff4d;
  }

  .hero-section-slider .swiper-pagination-bullet-active::before {
    background-color: #fff;
    animation: slide-progress 5s cubic-bezier(0.3, 0, 0.3, 1) forwards;
  }

  /* Optional: Handle paused state manually using a class toggle in JS */
  .swiper-paused .swiper-pagination-bullet-active::before {
    animation-play-state: paused;
  }

  @keyframes slide-progress {
    0% {
      transform: translateX(-100%);
    }

    100% {
      transform: translateX(0);
    }
  }
</style>

<div class="custom-slider-wrapper hero-section-slider {{ section.settings.extra_class }}">
  <div class="swiper customSwiper">
    <div class="swiper-wrapper">
      {% for block in section.blocks %}
        {% assign image = block.settings.background_image %}
        {% if image != blank %}
          <div class="swiper-slide" style="background-image: url('{{ image | image_url }}');">
            <div class="container_fluid">
              <div class="slide-content max-w-[481px]">
                {% if block.settings.tagline != blank %}
                  <p class="text-20 leading-[22.4px] text-white mb-20">{{ block.settings.tagline }}</p>
                {% endif %}
                {% if block.settings.heading != blank %}
                  <h2 class="text-white mb-10 normal-case leading-[49px]">{{ block.settings.heading }}</h2>
                {% endif %}
                {% if block.settings.subtext != blank %}
                  <p class="subtext text-16 leading-24 text-white">{{ block.settings.subtext }}</p>
                {% endif %}
                {% if block.settings.button_link != blank and block.settings.button_text != blank %}
                  <a href="{{ block.settings.button_link }}" class="ctm-button mt-30 mb-[88px] button-with-arrow">
                    {{ block.settings.button_text }}
                    {{- 'ctm-button-arrow.svg' | inline_asset_content -}}
                  </a>
                {% endif %}
              </div>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
  <div class="swiper-pagination pl-20 small_desktop:pl-50 desktop:pl-80"></div>
  <div
    class="scroll-down-btn absolute bottom-52 right-80 z-[1] cursor-pointer flex items-center gap-x-8 group"
    onclick="scrollDownByBanner()"
  >
    <span class="text-16 leading-24 text-white">Scroll</span>
    <div class="w-30 h-30 rounded-full bg-white flex justify-center items-center border border-white group-hover:bg-transparent">
      <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.246094 5.99792L5.8444 11.6899C7.24465 10.2622 10.0425 7.4256 11.4428 5.99786L10.7477 5.27954C9.48837 6.56384 7.81036 8.2626 6.33853 9.76138L6.33862 0.49328L5.35019 0.493281L5.35013 9.7614L0.948723 5.27959L0.246094 5.99792Z" fill="#112D4E"/>
      </svg>
    </div>
  </div>
</div>

<script>
  var swiper = new Swiper('.customSwiper', {
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    autoplay: {
      delay: 5000,
      disableOnInteraction: false,
    },
    loop: true,
    watchSlidesProgress: true,
  });

  document.addEventListener(
    'mouseenter',
    (event) => {
      const el = event.target;
      if (el && el.matches && el.matches('.swiper-container')) {
        el.swiper.autoplay.stop();
        el.classList.add('swiper-paused');

        const activeNavItem = el.querySelector('.swiper-pagination-bullet-active');
        activeNavItem.style.animationPlayState = 'paused';
      }
    },
    true,
  );

  document.addEventListener(
    'mouseleave',
    (event) => {
      const el = event.target;
      if (el && el.matches && el.matches('.swiper-container')) {
        el.swiper.autoplay.start();
        el.classList.remove('swiper-paused');

        const activeNavItem = el.querySelector('.swiper-pagination-bullet-active');

        activeNavItem.classList.remove('swiper-pagination-bullet-active');

        setTimeout(() => {
          activeNavItem.classList.add('swiper-pagination-bullet-active');
        }, 10);
      }
    },
    true,
  );
</script>

{% schema %}
{
  "name": "Hero Slider",
  "settings": [
    {
      "type": "text",
      "id": "extra_class",
      "label": "Extra Class"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "background_image",
          "label": "Background Image"
        },
        {
          "type": "text",
          "id": "tagline",
          "label": "Tagline"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "text",
          "id": "subtext",
          "label": "Subtext"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text",
          "default": "Shop Now"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Slider",
      "category": "Custom"
    }
  ]
}
{% endschema %}
